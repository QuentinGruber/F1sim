var ccsd = {
    util: {}
}

// https://gist.github.com/ryanflorence/5817898
ccsd.util.onPage = function (rex, fn, fnfail) {
    'use strict';

    var match = location.pathname.match(rex);

    if (typeof fn !== 'undefined' && match) {
        return fn();
    }
    if (typeof fnfail !== 'undefined' && !match) {
        return fnfail();
    }
    return match ? match : false;
}

ccsd.util.hasAnyRole = function () {
    'use strict';

    var roles = Array.prototype.slice.call(arguments, 0),
        i;
    // so it doesn't generate an error on login page
    if (typeof ENV.current_user_roles === 'undefined' || !ENV.current_user_roles) {
        return false;
    }
    for (i = 0; i < roles.length; i++) {
        if (ENV.current_user_roles.indexOf(roles[i]) !== -1)
            return true;
    }
    return false;
}

ccsd.util.addMenuButton = function (title, url, img) {
    var id_title = 'global_nav_custom_' + title.replace(/\s/, '_').toLowerCase();

    var button = $('<li class="custom-menu ic-app-header__menu-list-item" id="' + id_title + '_menu">' +
        '<a id="' + id_title + '" href="' + url + '" class="ic-app-header__menu-list-link">' +
        '<div class="menu-item-icon-container" aria-hidden="true"><span class="menu-item__badge" style="display: none">' + title + '</span><span class="svg-holder"></span></div>' +
        '<div class="menu-item__text">' + title + '</div>' +
        '</a>' +
        '</li>');

    button.find('.svg-holder').load(img, function () {
        var svg = $(this).find('svg')[0];
        try {
            svg.classList.add('ic-icon-svg', 'ic-icon-svg--apps ic-icon-svg-ccsd');
        }
        catch (e) {
            svg.setAttribute('class', 'ic-icon-svg ic-icon-svg--apps ic-icon-svg-ccsd');
        }

        $('#' + id_title + '_menu').remove();
        $('#menu .menu-item:last').after(button);
    });
};

// ==UserScript==
// @name         Canvas Hide Settings for TAs
// @namespace    
// @version      0.0.1
// @description  A Canvas UserScript to hide sensible settings to TAs
// @author       SUPINFO Information Systems
// @include      https://*.supinfo.com/courses/* 
// @grant        none
// ==/UserScript==
(function () {
    console.log(ENV);
    var restrictedRoles = ["5", "11"];
    var powerfulRoles = ["1", "4", "6"];

    var domain = window.location.hostname;
    var courseID = Number(ENV.COURSE_ID);
    var match = ENV.context_asset_string.match(/^course_(\d+)$/);
    if (match && match[1]) {
        courseID = Number(match[1]);
    }
    if (isNaN(courseID))
        return;
    var userID = Number(ENV.current_user_id);
    if (isNaN(userID))
        return;

    var jsonURL = "https://" + domain + "/api/v1/courses/" + courseID + "/enrollments?user_id=" + userID;

    var doStuff = function () {
        document.body.classList.add("siu-TADetected");
    }

    var userRoles = [];

    var getEnrollments = $.getJSON(jsonURL, function (data) {
        for (var i = 0; i < data.length; i++) {
            userRoles.push(data[i].role_id);
        }
    });
    getEnrollments.done(function () {
        isRestricted = false;
        isPowerful = false;
        for (var i = 0; i < userRoles.length; i++) {
            var restrictedRole = restrictedRoles.indexOf(userRoles[i]);
            if (restrictedRole != -1) {
                isRestricted = true;
            }
            else {
                for (var j = 0; j < powerfulRoles.length; j++) {
                    var powerfulRole = powerfulRoles.indexOf(userRoles[i]);
                    if (powerfulRole != -1) {
                        isPowerful = true;
                        break;
                    }
                }
            }
        }
        if (isRestricted && !isPowerful) {
            doStuff();
        }
    });

    getEnrollments.error(function () {
        console.log("Error getting enrollments.");
    });
})();

(function () {
    'use strict';

    // Dashboard specific code
    ccsd.util.onPage(/^\/#?/, function () {

        // Check if the user has role "Student" in ANY course
        if (ccsd.util.hasAnyRole('student')) {

            // Remove ignore buttons
            $(".to-do-list .IgnoreButton").remove();

        }

    });

    // Course's People specifc code
    ccsd.util.onPage(/^\/courses\/\d+\/users#?/, function () {

        // Other than admin specific code.
        if (!ccsd.util.hasAnyRole('admin', 'root_admin')) {

            var addAlert = function () {
                // var neededElem = document.getElementsByClassName('peoplesearch__selections')[0];
                // var newNode = document.createElement("div");
                // newNode.id = 'custom-addPeople-Notice';
                // newNode.className = 'alert alert-warning';
                // var space = neededElem.parentNode.insertBefore(newNode, neededElem);
                // space.insertAdjacentHTML('afterbegin', 'Please keep in mind, K-12 students should only be enrolled with the <b>Student</b> role.');
            }

            var startObserver = function () {
                var mcb = function () {
                    var modalFound = document.getElementById('add_people_modal');
                    if (modalFound) {
                        addAlert();
                        observer.disconnect();
                    }
                };

                // $("#peoplesearch_select_section").prop("disabled", true);

                // var sections = [];

                // var domain = window.location.hostname;
                // var courseID = Number(ENV.course.id);
                // var userID = Number(ENV.current_user_id);

                // var jsonURL = "https://" + domain + "/api/v1/courses/" + courseID + "/enrollments?user_id=" + userID + "&type=TaEnrollment";

                // var enrollments = $.getJSON(jsonURL, function (data) {
                //     for (var i = 0; i < data.length; i++) {
                //         sections.push(data[i].course_section_id);
                //     }
                // });

                // enrollments.done(function () {

                //     var courseSections = document.getElementById('peoplesearch_select_section');
                //     var totalSections = courseSections.options.length;
                //     var removeSections = totalSections - sections.length;

                //     console.log("  There are " + totalSections + " sections in course " + currentCourse + ".");
                //     console.log("  User " + userID + " is a TA in " + sections.length + " sections.");
                //     console.log("  User " + userID + "'s sections are: ");
                //     console.log("  " + sections);
                //     console.log("  " + removeSections + " section(s) will be removed.");

                //     var section;
                //     var optval = {};
                //     var newOpts = "";
                //     for (section of sections) {
                //         optval = $("#peoplesearch_select_section option[value='" + section + "']").text();
                //         newOpts += "<option value=\"" + section + "\">" + optval + "</option>";
                //     }

                //     // Replace the old list of options with the user's list
                //     $("#peoplesearch_select_section").html(newOpts);

                //     // Options removed, re-enable form
                //     $("#peoplesearch_select_section").prop("disabled", false);
                // });

                // enrollments.fail(function () {
                //     // Errored out, re-enable form
                //     $("#peoplesearch_select_section").prop("disabled", false);
                // });

                var observer = new MutationObserver(mcb);
                observer.observe(document.body, { attributes: true, childList: true, subtree: true });
            }
            document.getElementById('addUsers').onclick = startObserver;
        }

    });

    $('#add_module_item_select').change(() => {
        if ($('#add_module_item_select').val().indexOf('external') > -1) {
            $('#external_url_create_new_tab').prop("checked", true);
            $('#external_tool_create_new_tab').prop("checked", true);
        }
    });
});